name: publish

on:
  workflow_run:
    workflows: ["build"]
    types:
      - completed

jobs:
  publish:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: log origin event
        env:
          ORIGIN: ${{ github.event.html_url }}
        run: echo "$ORIGIN"
      - name: download artifact
        uses: actions/github-script@v3.1.0
        with:
          script: |
            var artifacts = await github.actions.listWorkflowRunArtifacts({
                owner: context.repo.owner,
                repo: context.repo.repo,
                run_id: ${{github.event.workflow_run.id }},
            });
            var matchArtifact = artifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "fider-image"
            })[0];
            var download = await github.actions.downloadArtifact({
                owner: context.repo.owner,
                repo: context.repo.repo,
                artifact_id: matchArtifact.id,
                archive_format: 'zip',
            });
            var fs = require('fs');
            fs.writeFileSync('${{github.workspace}}/fider-image.zip', Buffer.from(download.data));
      - run: unzip fider-image.zip
      - run: docker load --input fider-image.tar

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}

      - name: push docker image (pull_request)
        if: ${{ github.event.workflow_run.event == 'pull_request' }}
        run: |
          docker tag fider-image getfider/fider:PR_$(cat ./pr)
          docker push getfider/fider:PR_$(cat ./pr)

      - name: push docker image (push)
        if: ${{ github.event.workflow_run.event == 'push' }}
        run: |
          docker tag fider-image getfider/fider:SHA_$(cat ./sha7)
          docker push getfider/fider:SHA_$(cat ./sha7)
          docker tag fider-image getfider/fider:main
          docker push getfider/fider:main
